{"version":3,"sources":["audio/rectangles-no-3.ogg","audio/rectangles-no-3.mid","js/P5SketchWithAudio.js","js/App.js","index.js"],"names":["P5SketchWithAudio","Tone","Transport","PPQ","sketchRef","useRef","Sketch","p","canvas","canvasWidth","window","innerWidth","canvasHeight","innerHeight","audioLoaded","player","colours","r","g","b","preload","Midi","fromUrl","midi","then","result","console","log","tracks","noteSet1","notes","noteSet2","noteSet3","filter","note","Player","audio","toMaster","sync","start","scheduleCueSet","noteSet","callbackName","lastTicks","i","ticks","time","schedule","length","multipliers","rectangleGrid","cellWidth","cellHeight","compositions","currentComposition","setup","createCanvas","frameRate","background","stroke","strokeWeight","noLoop","width","height","push","j","x","y","empty","createComposition","rectangles","draw","drawRect","rectangle","widthMultiplier","heightMultiplier","colourIndex","colour","fill","rect","currentPointer","rectanglesPerCue","currentCue1","executeCueSet1","clear","random","currentCue2","rectanglesToDraw","executeCueSet2","modulo","Math","floor","limit","currentCue3","executeCueSet3","map","obj","spaceAvailable","some","cell","parseInt","index","findIndex","mousePressed","state","pause","updateCanvasDimensions","redraw","attachEvent","addEventListener","useEffect","p5","current","ref","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9f5c7747.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/rectangles-no-3.0eed2b58.ogg\";","export default __webpack_public_path__ + \"static/media/rectangles-no-3.e3113a81.mid\";","import React, { useRef, useEffect } from \"react\";\nimport * as p5 from \"p5\";\nimport Tone from 'tone'\nimport { Midi } from '@tonejs/midi'\n\nimport audio from \"../audio/rectangles-no-3.ogg\";\nimport midi from \"../audio/rectangles-no-3.mid\";\n\nconst P5SketchWithAudio = () => {\n    Tone.Transport.PPQ = 3840 * 4;\n    const sketchRef = useRef();\n\n    const Sketch = p => {\n\n        p.canvas = null;\n\n        p.canvasWidth = window.innerWidth;\n\n        p.canvasHeight = window.innerHeight;\n\n        p.audioLoaded = false;\n\n        p.player = null;\n\n        p.colours = [\n          {\n            r: 0,\n            g: 0,\n            b: 0,\n          },\n          {\n            r: 255,\n            g: 255,\n            b: 255,\n          },\n          {\n            r: 221,\n            g: 1,\n            b: 0,\n          },\n          {\n            r: 34,\n            g: 80,\n            b: 149,\n          },\n          {\n            r: 250,\n            g: 201,\n            b: 1,\n          },\n        ];\n\n        p.preload = () => {\n             Midi.fromUrl(midi).then(\n                function(result) {\n                    console.log(result.tracks);\n                    const noteSet1 = result.tracks[3].notes; // Sampler 1 - Heavy guitar\n                    const noteSet2 = result.tracks[5].notes; // Sampler 3 - Clavinet D6\n                    const noteSet3 = result.tracks[0].notes; // Synth 1 - Filter Wheeler\n                    const noteSet4= result.tracks[8].notes.filter((note) => note.midi !== 43); // Redrum 1 - Abstract Kit 01\n                    p.player = new Tone.Player(audio, () => { p.audioLoaded = true; }).toMaster();\n                    p.player.sync().start(0);\n                    p.scheduleCueSet(noteSet1, 'executeCueSet1');\n                    p.scheduleCueSet(noteSet2, 'executeCueSet2'); \n                    p.scheduleCueSet(noteSet3, 'executeCueSet3'); \n                }\n            );\n        }\n\n        p.scheduleCueSet = (noteSet, callbackName)  => {\n            let lastTicks = -1;\n            for (let i = 0; i < noteSet.length; i++) {\n                const note = noteSet[i],\n                    { ticks, time } = note;\n                if(ticks !== lastTicks){\n                    Tone.Transport.schedule(\n                        () => {\n                            p.[callbackName](note);\n                        }, \n                        time\n                    );\n                    lastTicks = ticks;\n                }\n            }\n        } \n\n        p.multipliers = [];\n        \n        p.rectangleGrid = [];\n\n        p.cellWidth = 0;\n\n        p.cellHeight = 0;\n\n        p.compositions = [];\n\n        p.currentComposition = 0;\n\n        p.setup = () => {\n            p.canvas = p.createCanvas(p.canvasWidth, p.canvasHeight);\n            p.frameRate(30);\n            p.background(255);\n            p.stroke(0);\n            p.strokeWeight(4);\n            p.noLoop();\n            p.cellWidth = p.width / 16;\n            p.cellHeight = p.height / 16;\n\n            for (let i = 1; i <= 4; i++) {\n                p.multipliers.push(i);\n            }\n            for (let i = 1; i <= 16; i++) {\n                for (let j = 1; j <= 16; j++) {\n                    p.rectangleGrid.push(\n                        {\n                            x: i,\n                            y: j, \n                            empty: true\n                        }\n                    );\n                }\n            }\n\n            for (let i = 0; i < 60; i++) {\n                p.createComposition();\n                p.compositions.push(p.rectangles);\n            }\n        };\n\n        p.draw = () => {\n            \n        };\n\n        p.drawRect = (rectangle) => {\n            const { x, y, widthMultiplier, heightMultiplier, colourIndex } = rectangle,\n                colour = p.colours[colourIndex];\n            p.fill(colour.r, colour.g, colour.b);\n            p.rect(p.cellWidth * x - p.cellWidth, p.cellHeight * y - p.cellHeight, p.cellWidth * widthMultiplier, p.cellHeight * heightMultiplier);\n        \n        };\n\n        p.currentPointer = 0;\n\n        p.rectanglesPerCue = 0;\n\n        p.currentCue1 = 1;\n\n        p.executeCueSet1 = (note) => {\n            if(p.currentCue1 <= 10){\n                p.clear();\n                p.rectangles = p.compositions[p.currentComposition];\n                p.currentComposition++;\n                for (let i = 0; i < p.rectangles.length; i++) {\n                    p.drawRect( p.rectangles[i]);\n                }\n            }\n\n            if(p.currentCue1 > 20){\n                p.colours = [\n                    {\n                        r: 0,\n                        g: 0,\n                        b: 0,\n                    },\n                    {\n                        r: 255,\n                        g: 255,\n                        b: 255,\n                    },\n                    {\n                        r: p.random(255),\n                        g: p.random(255),\n                        b: p.random(255),\n                    },\n                    {\n                        r: p.random(255),\n                        g: p.random(255),\n                        b: p.random(255),\n                    },\n                    {\n                        r: p.random(255),\n                        g: p.random(255),\n                        b: p.random(255),\n                    },\n                ];\n            }\n            p.currentCue1++;\n        };\n\n        p.currentCue2 = 1;\n\n        p.rectanglesToDraw = [];\n\n        p.executeCueSet2 = (note) => {\n            if(p.currentCue2 > 33 && p.currentCue2 <= (165 - 6)){\n                const modulo = p.currentCue2 % 33;\n                if(modulo === 1){\n                    p.rectangles = p.compositions[p.currentComposition];\n                    p.currentComposition++;\n                    p.rectanglesToDraw = [];\n                    p.currentPointer = 0;\n                    p.rectanglesPerCue = Math.floor(p.rectangles.length / 33);\n                }\n                \n                if(p.currentPointer < p.rectangles.length){\n                    const limit = (p.rectanglesPerCue * modulo) <= p.rectangles.length ? p.rectanglesPerCue * modulo : p.rectangles.length;\n                    for (let i = p.currentPointer; i < limit; i++) {\n                        p.rectanglesToDraw.push( p.rectangles[i]);\n                    }\n                    p.currentPointer = p.rectanglesPerCue * modulo;\n                }\n\n                p.clear();\n                for (let i = 0; i < p.rectanglesToDraw.length; i++) {\n                    p.drawRect( p.rectanglesToDraw[i]);\n                }\n            }\n            p.currentCue2++;\n        };\n\n        p.currentCue3 = 1;\n\n        p.executeCueSet3 = (note) => {\n            if(p.currentCue3 > 6){\n                p.clear();\n                p.rectangles = p.compositions[p.currentComposition];\n                p.currentComposition++;\n                for (let i = 0; i < p.rectangles.length; i++) {\n                    p.drawRect( p.rectangles[i]);\n                }\n            }\n            p.currentCue3++;\n        };\n\n        p.rectangles = [];\n\n\n        p.createComposition = () => {\n            p.rectangles = [];\n            p.rectangleGrid = p.rectangleGrid.map(obj => ({...obj, empty: true}));\n            let spaceAvailable = p.rectangleGrid.some((obj) => obj.empty);\n            while(spaceAvailable) {\n                const cell = p.random(p.rectangleGrid.filter((obj) => obj.empty)),\n                    { x, y } = cell;\n                let widthMultiplier = x < 16 ? p.random(p.multipliers) : 1,\n                    heightMultiplier = y < 16 ? p.random(p.multipliers) : 1;\n                widthMultiplier = x + widthMultiplier > 16 ? 17 - x : widthMultiplier;\n                heightMultiplier = y + heightMultiplier > 16 ? 17 - y : heightMultiplier;\n                p.rectangles.push(\n                    {\n                        x: x,\n                        y: y,\n                        widthMultiplier: widthMultiplier,\n                        heightMultiplier: heightMultiplier,\n                        colourIndex: parseInt(p.random(0, 5))\n                    } \n                )\n                for (let i = x; i < (x + widthMultiplier); i++) {\n                    for (let j = y; j < (y + heightMultiplier); j++) {\n                        const index = p.rectangleGrid.findIndex((obj) => obj.x === i && obj.y === j); \n                        p.rectangleGrid[index].empty = false;\n                        \n                    }\n                }\n                spaceAvailable = p.rectangleGrid.some((obj) => obj.empty);\n            }\n        };\n\n        p.mousePressed = () => {\n            if(p.audioLoaded){\n                 if (p.player.state === \"started\") {\n                    Tone.Transport.pause(); // Use the Tone.Transport to pause audio\n                } \n                else if (p.player.state === \"stopped\") {\n                    Tone.Transport.start(); // Use the Tone.Transport to start again\n                }\n            }\n        };\n\n        p.updateCanvasDimensions = () => {\n            p.canvasWidth = window.innerWidth;\n            p.canvasHeight = window.innerHeight;\n            p.createCanvas(p.canvasWidth, p.canvasHeight);\n            p.redraw();\n        }\n\n        if (window.attachEvent) {\n            window.attachEvent(\n                'onresize',\n                function () {\n                    p.updateCanvasDimensions();\n                }\n            );\n        }\n        else if (window.addEventListener) {\n            window.addEventListener(\n                'resize',\n                function () {\n                    p.updateCanvasDimensions();\n                },\n                true\n            );\n        }\n        else {\n            //The browser does not support Javascript event binding\n        }\n    };\n\n    useEffect(() => {\n        new p5(Sketch, sketchRef.current);\n    }, []);\n\n    return (\n        <div ref={sketchRef}>\n        </div>\n    );\n};\n\nexport default P5SketchWithAudio;\n","import P5SketchWithAudio from './P5SketchWithAudio'\n\nfunction App() {\n  return (\n    <P5SketchWithAudio/>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './css/build.css';\nimport App from './js/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}